#######################################################################################################################
#######################################################################################################################
# Title:        PWM Distortion Toolkit for Standard Topologies
# Topic:        Power Electronics
# File:         InitB4
# Date:         01.05.2024
# Author:       Dr. Pascal A. Schirmer
# Version:      V.1.0
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Function Description
#######################################################################################################################
"""
This function initialises the variables for the time, frequency, and distortion domain for the B4 bridge.
Inputs:     1) W:       number of sample points for the distortion
Outputs:    1) data:    data array
"""

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================

# ==============================================================================
# External
# ==============================================================================
import numpy as np
import pandas as pd


#######################################################################################################################
# Function
#######################################################################################################################
def initB4_Data():
    ###################################################################################################################
    # Start Values
    ###################################################################################################################
    # ==============================================================================
    # General
    # ==============================================================================
    data = {'elec': {}, 'loss': {}, 'ther': {}}

    # ==============================================================================
    # Switches
    # ==============================================================================
    # ------------------------------------------
    # Electric
    # ------------------------------------------
    data['elec']['sw'] = {}
    data['elec']['sw']['S1'] = pd.DataFrame(columns=['i_T', 'v_T', 'i_D', 'v_D'])
    data['elec']['sw']['S2'] = pd.DataFrame(columns=['i_T', 'v_T', 'i_D', 'v_D'])
    data['elec']['sw']['S3'] = pd.DataFrame(columns=['i_T', 'v_T', 'i_D', 'v_D'])
    data['elec']['sw']['S4'] = pd.DataFrame(columns=['i_T', 'v_T', 'i_D', 'v_D'])

    # ------------------------------------------
    # Losses
    # ------------------------------------------
    data['loss']['sw'] = {}
    data['loss']['sw']['S1'] = pd.DataFrame(columns=['p_T_c', 'p_T_s', 'p_T', 'p_D_c', 'p_D_s', 'p_D', 'p_L'])
    data['loss']['sw']['S2'] = pd.DataFrame(columns=['p_T_c', 'p_T_s', 'p_T', 'p_D_c', 'p_D_s', 'p_D', 'p_L'])
    data['loss']['sw']['S3'] = pd.DataFrame(columns=['p_T_c', 'p_T_s', 'p_T', 'p_D_c', 'p_D_s', 'p_D', 'p_L'])
    data['loss']['sw']['S4'] = pd.DataFrame(columns=['p_T_c', 'p_T_s', 'p_T', 'p_D_c', 'p_D_s', 'p_D', 'p_L'])

    # ------------------------------------------
    # Thermal
    # ------------------------------------------
    data['ther']['sw'] = pd.DataFrame(columns=['T1', 'T2', 'T3', 'T4',
                                               'D1', 'D2', 'D3', 'D4',
                                               'C1', 'C2', 'C3', 'C4'])

    # ==============================================================================
    # Capacitor
    # ==============================================================================
    # ------------------------------------------
    # Electric
    # ------------------------------------------
    data['elec']['cap'] = {}
    data['elec']['cap']['C1'] = pd.DataFrame(columns=['i_c', 'v_c'])

    # ------------------------------------------
    # Losses
    # ------------------------------------------
    data['loss']['cap'] = {}
    data['loss']['cap']['C1'] = pd.DataFrame(columns=['p_L'])

    # ------------------------------------------
    # Thermal
    # ------------------------------------------
    data['ther']['cap'] = pd.DataFrame(columns=['C1'])

    ###################################################################################################################
    # Outputs
    ###################################################################################################################
    return data


#######################################################################################################################
# Function
#######################################################################################################################
def initB4(W):
    ###################################################################################################################
    # Start Values
    ###################################################################################################################
    # ==============================================================================
    # General
    # ==============================================================================
    distAc = {}
    distDc = {}
    timeElec = {'sw': {}, 'cap': {}}
    timeLoss = {'sw': {}, 'cap': {}}
    timeTher = {'sw': {}, 'cap': {}}

    # ==============================================================================
    # Output
    # ==============================================================================
    timeElec['cap']['C1'] = pd.DataFrame(columns=['i_c', 'v_c'])
    timeSw = pd.DataFrame(columns=['t', 'v_a_ref', 'v_b_ref', 'e', 'xAs', 'xBs', 'xAsh', 'xBsh', 'sA', 'sB', 'cA', 'cB'])
    freqSw = pd.DataFrame(columns=['Sa', 'Sb', 'Xas', 'Xbs'])
    freqAc = pd.DataFrame(columns=['I_ab', 'V_ab'])
    freqDc = pd.DataFrame(columns=['I_dc', 'I_d_p', 'I_d_m', 'V_dc'])
    distAc['num'] = pd.DataFrame(data=np.ones((W, 6)), columns=['V_a_eff', 'V_a_v1_eff', 'V_a_thd', 'I_a_eff', 'I_a_v1_eff', 'I_a_thd'])
    distAc['ana'] = pd.DataFrame(data=np.ones((W, 6)), columns=['V_a_eff', 'V_a_v1_eff', 'V_a_thd', 'I_a_eff', 'I_a_v1_eff', 'I_a_thd'])
    distDc['num'] = pd.DataFrame(data=np.ones((W, 6)), columns=['V_dc_eff', 'V_dc_v1_eff', 'V_dc_thd', 'I_dc_eff', 'I_dc_v1_eff', 'I_dc_thd'])
    distDc['ana'] = pd.DataFrame(data=np.ones((W, 6)), columns=['V_dc_eff', 'V_dc_v1_eff', 'V_dc_thd', 'I_dc_eff', 'I_dc_v1_eff', 'I_dc_thd'])

    ###################################################################################################################
    # Outputs
    ###################################################################################################################
    return [timeSw, timeElec, timeLoss, timeTher, freqSw, freqDc, freqAc, distAc, distDc]
