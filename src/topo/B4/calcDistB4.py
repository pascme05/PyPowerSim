#######################################################################################################################
#######################################################################################################################
# Title:        PWM Distortion Toolkit for Standard Topologies
# Topic:        Power Electronics
# File:         calcDistB4
# Date:         01.05.2024
# Author:       Dr. Pascal A. Schirmer
# Version:      V.1.0
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Function Description
#######################################################################################################################
"""
This function calculates the analytical distortion functions for the B4 bridge.
Inputs:     1) Vdc:     DC-link voltage for the converter cell (V)
            2) Mi:      modulation index (p.u.)
            3) setup:   includes all simulation variables
Outputs:    1) distAc:  Ac distortion waveforms
            2) distDc:  Dc distortion waveforms
"""

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================

# ==============================================================================
# External
# ==============================================================================
import numpy as np


#######################################################################################################################
# Function
#######################################################################################################################
def calcDistB4_Ana(Mi, Vdc, setup):
    ###################################################################################################################
    # Initialisation
    ###################################################################################################################
    # ==============================================================================
    # Parameters
    # ==============================================================================
    # ------------------------------------------
    # General
    # ------------------------------------------
    fs = setup['Par']['PWM']['fs']
    Ts = 1/fs
    L = setup['Top']['L']
    
    # ==============================================================================
    # Variables
    # ==============================================================================
    distAc = {}
    distDc = {}
    
    ###################################################################################################################
    # Calculation
    ###################################################################################################################
    # ==============================================================================
    # AC-Side
    # ==============================================================================
    V_ab_eff = Vdc*np.sqrt(2/np.pi*Mi)
    V_ab_v1_eff = 1/np.sqrt(2) * Vdc * Mi
    V_ab_thd = Vdc * np.sqrt(1 - np.pi/4*Mi)
    I_a_thd = 1/np.sqrt(48) * Vdc * Ts/L * np.sqrt(3/8*Mi**4 - 8/(3*np.pi)*Mi**3 + 0.5*Mi**2)

    # ==============================================================================
    # DC-Side
    # ==============================================================================

    ###################################################################################################################
    # Post-Processing
    ###################################################################################################################
    # ==============================================================================
    # AC-Side
    # ==============================================================================
    distAc['V_a_eff'] = V_ab_eff
    distAc['V_a_v1_eff'] = V_ab_v1_eff
    distAc['V_a_thd'] = V_ab_thd
    distAc['I_a_eff'] = 0
    distAc['I_a_v1_eff'] = 0
    distAc['I_a_thd'] = I_a_thd
    
    # ==============================================================================
    # DC-Side
    # ==============================================================================
    distDc['V_dc_eff'] = 0
    distDc['V_dc_v1_eff'] = 0
    distDc['V_dc_thd'] = 0
    distDc['I_dc_eff'] = 0
    distDc['I_dc_v1_eff'] = 0
    distDc['I_dc_thd'] = 0
    
    ###################################################################################################################
    # Return
    ###################################################################################################################
    return [distAc, distDc]
