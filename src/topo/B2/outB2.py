#######################################################################################################################
#######################################################################################################################
# Title:        PWM Distortion Toolkit for Standard Topologies
# Topic:        Power Electronics
# File:         outB2
# Date:         28.04.2024
# Author:       Dr. Pascal A. Schirmer
# Version:      V.1.0
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Function Description
#######################################################################################################################
"""
This function summarizes the calculated outputs for the B2 bridge circuit.
Inputs:     1) timeAc:  time domain ac results
            2) timeDc:  time domain dc results
            3) freqSw:  frequency domain results switching function
            4) freqAc:  frequency domain results ac
            5) freqDc:  frequency domain results dc
            6) t_ref:   reference time vector (sec)
            7) v_ref:   reference voltage vector (V)
            8) e_ref:   reference back EMI vector (V)
            9) s:       switching function
            10) c:      carrier waveform
            11) xs:     sampled reference
            12) xsh:    sampled reference including zero order hold
            13) K:      number of fundamental cycles
            14) Nsim:   number of samples in fundamental period
            15) Tel:    period of the fundamental
            16) Nel:    number of electrical cycles in transient period
Outputs:    1) time:    results in the time domain
            2) freq:    results in the frequency domain
            3) dist:    results in the distortion domain
"""

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================
from src.topo.B2.initB2 import initB2

# ==============================================================================
# External
# ==============================================================================
import numpy as np


#######################################################################################################################
# Function
#######################################################################################################################
def outB2_Trans(out, timeAc, timeDc, freqSw, freqAc, freqDc, t_ref, v_ref, e_ref, s, c, xs, xsh, K, Nsim, Tel, Nel):
    ###################################################################################################################
    # Init Values
    ###################################################################################################################
    # ==============================================================================
    # Variables
    # ==============================================================================
    time = {}
    freq = {}

    # ==============================================================================
    # Struct
    # ==============================================================================
    [timeSw, _, _, _, _, _, _, _, _] = initB2(2)

    ###################################################################################################################
    # Output Values
    ###################################################################################################################
    # ==============================================================================
    # General
    # ==============================================================================
    timeSw['t'] = t_ref[0:((K * Nsim + 1) - Nsim)]
    timeSw['v_ref'] = v_ref[Nsim:(K * Nsim + 1)]
    timeSw['e'] = e_ref[Nsim:(K * Nsim + 1)]
    timeSw['s'] = s[Nsim:(K * Nsim + 1)]
    timeSw['c'] = c[Nsim:(K * Nsim + 1)]
    timeSw['xs'] = xs[Nsim:(K * Nsim + 1)]
    timeSw['xsh'] = xsh[Nsim:(K * Nsim + 1)]

    # ==============================================================================
    # Combine
    # ==============================================================================
    # ------------------------------------------
    # Time
    # ------------------------------------------
    time['Sw'] = timeSw
    time['Ac'] = timeAc
    time['Dc'] = timeDc
    time['t'] = np.linspace(0, Tel * Nel, int(len(out['loss']['sw']['S1']['p_T'])))
    time['Elec'] = out['elec']
    time['Loss'] = out['loss']
    time['Ther'] = out['ther']

    # ------------------------------------------
    # Frequency
    # ------------------------------------------
    freq['Sw'] = freqSw
    freq['Ac'] = freqAc
    freq['Dc'] = freqDc

    ###################################################################################################################
    # Outputs
    ###################################################################################################################
    return [time, freq]


#######################################################################################################################
# Function
#######################################################################################################################
def outB2_Steady(timeElec, timeLoss, timeTher, timeAc, timeDc, freqSw, freqAc, freqDc, t, v_ref, e_ref, s, c, xs, xsh, W, ende, start):
    ###################################################################################################################
    # Init Values
    ###################################################################################################################
    # ==============================================================================
    # Variables
    # ==============================================================================
    time = {}
    freq = {}

    # ==============================================================================
    # Struct
    # ==============================================================================
    [timeSw, _, _, _, _, _, _, _, _] = initB2(W)

    ###################################################################################################################
    # Output Values
    ###################################################################################################################
    # ==============================================================================
    # General
    # ==============================================================================
    timeSw['t'] = t[0:(ende - start)]
    timeSw['v_ref'] = v_ref[start:ende]
    timeSw['e'] = e_ref[start:ende]
    timeSw['s'] = s[start:ende]
    timeSw['c'] = c[start:ende]
    timeSw['xs'] = xs[start:ende]
    timeSw['xsh'] = xsh[start:ende]

    # ==============================================================================
    # Combine
    # ==============================================================================
    # ------------------------------------------
    # Time
    # ------------------------------------------
    time['Sw'] = timeSw
    time['Ac'] = timeAc
    time['Dc'] = timeDc
    time['Elec'] = timeElec
    time['Loss'] = timeLoss
    time['Ther'] = timeTher

    # ------------------------------------------
    # Frequency
    # ------------------------------------------
    freq['Sw'] = freqSw
    freq['Ac'] = freqAc
    freq['Dc'] = freqDc

    ###################################################################################################################
    # Outputs
    ###################################################################################################################
    return [time, freq]


#######################################################################################################################
# Function
#######################################################################################################################
def outB2_Sweep(distAc, distDc, timeAc, timeDc, freqSw, freqAc, freqDc, t, v_ref, e_ref, s, c, xs, xsh, W, M_i, ende, start):
    ###################################################################################################################
    # Init Values
    ###################################################################################################################
    # ==============================================================================
    # Variables
    # ==============================================================================
    time = {}
    freq = {}
    sweep = {}

    # ==============================================================================
    # Struct
    # ==============================================================================
    [timeSw, _, _, _, _, _, _, _, _] = initB2(W)

    ###################################################################################################################
    # Output Values
    ###################################################################################################################
    # ==============================================================================
    # General
    # ==============================================================================
    timeSw['t'] = t[0:(ende - start)]
    timeSw['v_ref'] = v_ref[start:ende]
    timeSw['e'] = e_ref[start:ende]
    timeSw['s'] = s[start:ende]
    timeSw['c'] = c[start:ende]
    timeSw['xs'] = xs[start:ende]
    timeSw['xsh'] = xsh[start:ende]

    # ==============================================================================
    # Combine
    # ==============================================================================
    # ------------------------------------------
    # Time
    # ------------------------------------------
    time['Sw'] = timeSw
    time['Ac'] = timeAc
    time['Dc'] = timeDc

    # ------------------------------------------
    # Frequency
    # ------------------------------------------
    freq['Sw'] = freqSw
    freq['Ac'] = freqAc
    freq['Dc'] = freqDc

    # ------------------------------------------
    # Sweep
    # ------------------------------------------
    sweep['Ac'] = distAc
    sweep['Dc'] = distDc
    sweep['Mi'] = M_i

    ###################################################################################################################
    # Outputs
    ###################################################################################################################
    return [time, freq, sweep]
