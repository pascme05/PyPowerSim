#######################################################################################################################
#######################################################################################################################
# Title:        PWM Distortion Toolkit for Standard Topologies
# Topic:        Power Electronics
# File:         genTF
# Date:         27.04.2024
# Author:       Dr. Pascal A. Schirmer
# Version:      V.1.0
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Function Description
#######################################################################################################################
"""
This function checks the parameters for correctness. It also considers general parameters of the machine to assure
smooth calculation.
Inputs:     1) para:    all parameters used in the simulation
            2) setup:   includes all simulation variables
Outputs:    1) out:     the output file includes the transfer functions of the architecture
"""

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================

# ==============================================================================
# External
# ==============================================================================
from scipy import signal


#######################################################################################################################
# Function
#######################################################################################################################
def genTF(para, setup):
    ###################################################################################################################
    # MSG IN
    ###################################################################################################################
    print("------------------------------------------")
    print("START: Generate transfer functions")
    print("------------------------------------------")

    ###################################################################################################################
    # Initialisation
    ###################################################################################################################
    # ==============================================================================
    # Parameters
    # ==============================================================================
    # ------------------------------------------
    # Load
    # ------------------------------------------
    R = setup['Top']['R']
    L = setup['Top']['L']
    
    # ------------------------------------------
    # DC-Link
    # ------------------------------------------
    C = para['Cap']['Elec']['con']['C']
    ESR = para['Cap']['Elec']['con']['ESR']
    
    # ------------------------------------------
    # Output Filter
    # ------------------------------------------
    Rout = setup['Top']['Rout']
    Lout = setup['Top']['Lout']
    Cout = setup['Top']['Cout']
    
    # ------------------------------------------
    # Input Filter
    # ------------------------------------------
    Rinp = setup['Top']['Rinp']
    Linp = setup['Top']['Linp']
    Cinp = setup['Top']['Cinp']

    # ==============================================================================
    # Variables
    # ==============================================================================
    out = {'TF': {}, 'SS': {}}

    ###################################################################################################################
    # Calculation
    ###################################################################################################################
    # ==============================================================================
    # Input Filter
    # ==============================================================================
    print("INFO: Input filter")
    out['TF']['Inp'] = signal.TransferFunction([ESR*C, 1], [Linp*Cinp, Rinp*Cinp + ESR*C, 1])
    
    # ==============================================================================
    # DC-Link
    # ==============================================================================
    print("INFO: DC-Link")
    out['TF']['DC'] = signal.TransferFunction([ESR*C, 1], [C, 0])
    
    # ==============================================================================
    # Output Filter
    # ==============================================================================
    print("INFO: Output filter")
    out['TF']['Out'] = signal.TransferFunction([L, R], [Lout*L*Cout, (Rout*L*Cout + Lout*R*Cout), (Lout + L + R*Rout*Cout), (R + Rout)])
    
    # ==============================================================================
    # Load
    # ==============================================================================
    print("INFO: Load")
    out['TF']['Load'] = signal.TransferFunction([1], [L, R])

    ###################################################################################################################
    # Post-Processing
    ###################################################################################################################
    # ==============================================================================
    # Convert-to-State-Space
    # ==============================================================================
    out['SS']['Inp'] = out['TF']['Inp'].to_ss()
    out['SS']['DC'] = out['TF']['DC'].to_ss()
    out['SS']['Out'] = out['TF']['Out'].to_ss()
    out['SS']['Load'] = out['TF']['Load'].to_ss()
    
    ###################################################################################################################
    # MSG Out
    ###################################################################################################################
    print("------------------------------------------")
    print("END: Generate transfer functions")
    print("------------------------------------------")

    ###################################################################################################################
    # Return
    ###################################################################################################################
    return out
