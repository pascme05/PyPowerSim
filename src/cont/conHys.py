#######################################################################################################################
#######################################################################################################################
# Title:        PWM Distortion Toolkit for Standard Topologies
# Topic:        Power Electronics
# File:         conHys
# Date:         15.05.2024
# Author:       Dr. Pascal A. Schirmer
# Version:      V.1.0
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Function Description
#######################################################################################################################
"""
This function implements hysteresis control for a single phase
Inputs:     1) i_ref:   input reference current (A)
            2) i_act:   input actual current (A)
            3) s_act:   input actual switching state
            4) tol:     hysteresis tolerance (A)
Outputs:    1) s_new:   updated switching sequence
            2) err:     difference to tolerance limit
"""

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================

# ==============================================================================
# External
# ==============================================================================
import numpy as np

#######################################################################################################################
# Additional Functions
#######################################################################################################################


#######################################################################################################################
# Main Function
#######################################################################################################################
def conHys(i_act, i_ref, s_act, tol):
    ###################################################################################################################
    # Initialisation
    ###################################################################################################################

    ###################################################################################################################
    # Pre-Processing
    ###################################################################################################################
    err = (i_act - i_ref)[-1]

    ###################################################################################################################
    # Calculation
    ###################################################################################################################
    if err >= tol:
        s_new = -np.ones(len(s_act))
    else:
        s_new = np.ones(len(s_act))

    ###################################################################################################################
    # Return
    ###################################################################################################################
    return [s_new, err]

#######################################################################################################################
# References
#######################################################################################################################
