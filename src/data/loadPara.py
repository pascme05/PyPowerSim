#######################################################################################################################
#######################################################################################################################
# Title:        PWM Distortion Toolkit for Standard Topologies
# Topic:        Power Electronics
# File:         loadPara
# Date:         14.08.2023
# Author:       Dr. Pascal A. Schirmer
# Version:      V.0.2
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================
from src.data.loadParaSwi import loadParaSwi
from src.data.loadParaCap import loadParaCap

# ==============================================================================
# External
# ==============================================================================


#######################################################################################################################
# Function
#######################################################################################################################
def loadPara(setupTopo, setupPath, setupPara, setupData, setupExp):
    ###################################################################################################################
    # MSG IN
    ###################################################################################################################
    print("------------------------------------------")
    print("START: Loading Parameter")
    print("------------------------------------------")

    ###################################################################################################################
    # Initialisation
    ###################################################################################################################
    dataPara = {'Swi': {}, 'Cap': {}}

    ###################################################################################################################
    # Loading
    ###################################################################################################################
    # ==============================================================================
    # Switches
    # ==============================================================================
    paraSwi = loadParaSwi(setupTopo['SwiName'], setupPath['parPath'], setupPara, setupData, setupExp)

    # ==============================================================================
    # Capacitor
    # ==============================================================================
    paraCap = loadParaCap(setupTopo['CapName'], setupPath['parPath'], setupPara)

    ###################################################################################################################
    # Post-Processing
    ###################################################################################################################
    dataPara['Swi'] = paraSwi
    dataPara['Cap'] = paraCap

    ###################################################################################################################
    # MSG Out
    ###################################################################################################################
    print("------------------------------------------")
    print("END: Loading Parameter")
    print("------------------------------------------")

    return dataPara
